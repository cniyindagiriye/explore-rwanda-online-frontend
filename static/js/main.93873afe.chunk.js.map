{"version":3,"sources":["styles/button.module.css","containers/Home/Home.js","App.js","constants/actions.js","store/initialState.js","store/utility.js","store/reducers/counter.js","store/index.js","index.js"],"names":["module","exports","Home","props","state","name","this","Component","App","className","styles","button","exact","path","component","INCREMENT","DECREMENT","SUBTRACT","counterInitialState","counter","updateObject","oldObject","updatedValues","reducer","action","type","val","rootReducer","combineReducers","ctr","counterReducer","composeEnhancers","composeWithDevTools","compose","store","createStore","applyMiddleware","next","thunk","ReactApp","rootElement","document","getElementById","ReactDOM","render"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,OAAS,yB,4PCeZC,E,kDAbb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,YAHS,E,0CAOnB,WAAU,IACAA,EAASC,KAAKF,MAAdC,KACR,OAAO,yCAAYA,S,GAVJE,aCgBJC,MAZf,WACE,OACE,qBAAKC,UAAWC,IAAOC,OAAvB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWZ,W,uBCX9Ba,EAAY,YACZC,EAAY,YAEZC,EAAW,WCHXC,EAAsB,CACjCC,QAAS,G,QCIIC,EALM,SAACC,EAAWC,GAAZ,mBAAC,eACjBD,GACAC,ICiBUC,EAfC,WAA0C,IAAzCnB,EAAwC,uDAAhCc,EAAqBM,EAAW,uCACvD,OAAQA,EAAOC,MACb,KAAKV,EACH,OAAOK,EAAahB,EAAO,CAAEe,QAASf,EAAMe,QAAU,IACxD,KAAKH,EACH,OAAOI,EAAahB,EAAO,CAAEe,QAASf,EAAMe,QAAU,IACxD,IHRe,MGSb,OAAOC,EAAahB,EAAO,CAAEe,QAASf,EAAMe,QAAUK,EAAOE,MAC/D,KAAKT,EACH,OAAOG,EAAahB,EAAO,CAAEe,QAASf,EAAMe,QAAUK,EAAOE,MAC/D,QACE,OAAOtB,ICVPuB,EAAcC,0BAAgB,CAClCC,IAAKC,IAODC,EAAmBC,uBAAuBC,UAIjCC,EAFDC,sBAAYR,EAAaI,EAAiBK,2BAPzC,kBAAM,SAACC,GAAD,OAAU,SAACb,GAE9B,OADea,EAAKb,OAM0Dc,OCPnEC,G,MACX,cAAC,IAAD,UACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,SAKOM,EAAcC,SAASC,eAAe,QAEnDC,IAASC,OAAOL,EAAUC,K","file":"static/js/main.93873afe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"button_button__3j3wS\"};","import React, { Component } from 'react';\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: 'Celestin',\n    };\n  }\n\n  render() {\n    const { name } = this.state;\n    return <div>Hello {name}</div>;\n  }\n}\n\nexport default Home;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport styles from './styles/button.module.css';\nimport Home from './containers/Home/Home';\n\nfunction App() {\n  return (\n    <div className={styles.button}>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","export const INCREMENT = 'INCREMENT';\nexport const DECREMENT = 'DECREMENT';\nexport const ADD = 'ADD';\nexport const SUBTRACT = 'SUBTRACT';\nexport const STORE_RESULT = 'STORE_RESULT';\nexport const DELETE_RESULT = 'DELETE_RESULT';\n","export const counterInitialState = {\n  counter: 0,\n};\n\nexport const resultInitialState = {\n  results: [],\n};\n","const updateObject = (oldObject, updatedValues) => ({\n  ...oldObject,\n  ...updatedValues,\n});\n\nexport default updateObject;\n","import { INCREMENT, DECREMENT, ADD, SUBTRACT } from '../../constants/actions';\nimport { counterInitialState } from '../initialState';\nimport updateObject from '../utility';\n\nconst reducer = (state = counterInitialState, action) => {\n  switch (action.type) {\n    case INCREMENT:\n      return updateObject(state, { counter: state.counter + 1 });\n    case DECREMENT:\n      return updateObject(state, { counter: state.counter - 1 });\n    case ADD:\n      return updateObject(state, { counter: state.counter + action.val });\n    case SUBTRACT:\n      return updateObject(state, { counter: state.counter - action.val });\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport counterReducer from './reducers/counter';\n\nconst rootReducer = combineReducers({\n  ctr: counterReducer,\n});\nconst logger = () => (next) => (action) => {\n  const result = next(action);\n  return result;\n};\n\nconst composeEnhancers = composeWithDevTools || compose;\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(logger, thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store/index';\nimport './index.css';\n\nexport const ReactApp = (\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>\n);\n\nexport const rootElement = document.getElementById('root');\n\nReactDOM.render(ReactApp, rootElement);\n"],"sourceRoot":""}